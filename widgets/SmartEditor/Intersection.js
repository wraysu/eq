// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://@sbaseurl@/jsapi/jsapi/esri/copyright.txt and http://www.arcgis.com/apps/webappbuilder/copyright.txt for details.
//>>built
define("dojo/_base/declare dojo/_base/lang dojo/Deferred jimu/BaseWidgetSetting esri/tasks/query esri/tasks/QueryTask esri/geometry/Extent".split(" "),function(n,h,k,p,q,r,t){return n([p],{baseClass:"jimu-widget-smartEditor-widgets-intersection",completeDef:null,layerFieldsObj:{},queriedLayers:[],postCreate:function(){this.startup();this.completeDef=null;this.layerFieldsObj={};this.queriedLayers=[]},startup:function(){},getDistinctLayers:function(a,b){var c=new k,d={};this.completeDef=null;this.layerFieldsObj=
{};this.queriedLayers=[];this.completeDef=new k;if(a.fieldValues){for(var e in a.fieldValues){d[e]=[];for(var g=0;g<a.fieldValues[e].length;g++){var f=a.fieldValues[e][g];if("Intersection"===f.actionName&&f.enabled)for(var l=0;l<f.fields.length;l++){var m=f.fields[l];-1===d[e].indexOf(m.layerId)&&d[e].push(m.layerId)}}}this._getIntersectionsForEachField(d,b)}else this.completeDef.resolve({});this.completeDef.then(h.hitch(this,function(){c.resolve(this.layerFieldsObj)}));return c.promise},_getIntersectionsForEachField:function(a,
b){var c;c=Object.keys(a);if(0<c.length){var d=c[0];this._syncIntersectionRequests(a[d],b).then(h.hitch(this,function(){delete a[d];this._getIntersectionsForEachField(a,b)}))}else this.completeDef.resolve()},_filterQueriedLayers:function(a){for(var b in this.layerFieldsObj){var c=a.indexOf(b);-1<c&&a.splice(c,1)}return a},_syncIntersectionRequests:function(a,b,c){c||(c=new k);a=this._filterQueriedLayers(a);0<a.length?this._getIntersectedFeatures(a[0],b).then(h.hitch(this,function(d){0<d.features.length?
this._intersectionResult(d,c):(a.splice(0,1),0<a.length?this._syncIntersectionRequests(a,b,c):this._intersectionResult(d,c))})):c.resolve();return c.promise},_intersectionResult:function(a,b){a.layerId&&(this.layerFieldsObj[a.layerId]=a.features&&0<a.features.length?a.featuresAttributes:{});b.resolve()},pointToExtent:function(a,b,c){var d=a.extent.getWidth()/a.width;c*=d;return new t(b.x-c,b.y-c,b.x+c,b.y+c,a.spatialReference)},_getAppropriateGeometryForQuery:function(a){var b;b=a;"point"===a.type&&
(b=this.pointToExtent(this.map,a,20));return b},_getIntersectedFeatures:function(a,b){var c,d,e,g,f;e=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject;f=e.objectIdField;c=new k;d=new q;e=new r(e.url);d.geometry=this._getAppropriateGeometryForQuery(b);d.outFields=["*"];d.returnGeometry=!1;e.execute(d,h.hitch(this,function(b){b&&b.features&&0<b.features.length?(b.features.sort(function(a,b){a=parseInt(a.attributes[f],10);b=parseInt(b.attributes[f],10);return a<b?1:0}),g=b.features[0].attributes):
(b={features:[]},g={});c.resolve({layerId:a,features:b.features,featuresAttributes:g})}),function(){c.resolve({layerId:a,features:[],featuresAttributes:{}})});return c.promise}})});